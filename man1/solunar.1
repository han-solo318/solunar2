.\" Copyright (C) 2024 Kevin Boone 
.\" Permission is granted to any individual or institution to use, copy, or
.\" redistribute this software so long as all of the original files are
.\" included, that it is not sold for profit, and that this copyright notice
.\" is retained.
.\"
.TH solunar 1 "June 2024"
.SH NAME
solunar

.SH SYNOPSIS
.B solunar \-\-city=name \-\-date=date {options} 
.PP

.SH DESCRIPTION
\fIsolunar\fR displays sunrise and sunset times,
and related data, at a specified location on a specified day.
The location can be specified as a city or as geographical coordinates.
The timezone can be specified in terms of a city or as an offset
from UTC. If no timezone is specified, \fIsolunar\fR shows results
in the local time of the specified location.

.SH "OPTIONS"

The long forms of all options can be abbreviated, so long
as the abbreviation is unambiguous.

.TP
.BI -a,--ampm
.LP
Show 12-hour AM/PM times rather than 24-hour clock times.

.TP
.BI -c,--city={name}
.LP
Specify a full or partial city name. Full names are of the form
"Europe/London", but it is usually easier to give a partial name:
\fI--city=paris\fR.
Matching is case-insensitive, and the program will warn if there
is more than one match. Use \fI--city-list\fR to get a (long)
list of known cities.

Specifying a city sets the geographical location (latitude and
longitude) and also the timezone for local time display. The
latitude and longitude can be overridden whilst still keeping the
city's name and timezone. Alternative, the timezone can be
overridden, while keeping the same location. 

.TP
.BI -d,--date={date}
.LP
The date can be specified in any of the following formats:

 Jan 21
 21 Jan
 Jan 21 2020
 Jan 21 20
 21 Jan 2020
 21 Jan 20
 2020-01-21 

Note that \fIsolunar\fR will not accept dates in formats where the
separator is a forward-slash character, because there is too much
opportunity for confusion between the US and European varieties. 

If no year is specified in the date, the current year is assumed. 
If not date is specified at all, the results will be for the 
current day.

.TP
.BI -f,--full
.LP

Display full, rather than summary, results. Not all functions display
more data in 'full' mode.

.TP
.BI -j,--json
.LP

Outputs all data in JSON format, for parsing by other programs.

.TP
.BI --list-cities
.LP

Print to standard out the full list of cities.

.TP
.BI --log-level={0..4}
.LP

For debugging purposes, set the logging level. The default level is
1. Levels greater then 3 will probably only make sense alongside the 
source code.

.TP
.BI -l,--latitude={-90..90}
.LP
Specifies the latitude in degrees. Positive latitudes are north
of the equator, negative south. The latitude can be a decimal number.

.TP
.BI -o,--longitude={-180..180}
.LP
Specifies the longitude in degrees. Positive longitudes are east of 
of the meridian, negative south. The longitude can be a decimal number.

Note that latitude and longitude can be specified along with a city
name, to use the city's timezone information. Without a city name, 
the latitude and longitude must be used with the \fI--tz\fR option
to set a timezone.

.TP
.BI -t,--tz={timezone}
.LP
Sets the timezone in which results will be displayed. This option also
affects the interpretation of input dates, in a rather subtle way. 
In general \fIsolunar\fR displays information for a 24-hour period
beginning and ending at midnight. When a date is entered on the
command-line, the 24-hour period is assumed to be on that date
in the specified timezone. Otherwise, the 24-hour period is
relative to the timezone of the specified city.

In general, any name in the city list can also be used as a timezone,
except that the \fI--tz\fR switch will not accept abbreviations. 
On most Linux systems, the timezone can also be one of the conventional
strings: GMT, UTC, EST, MST, WET, etc. These can be used with 
offsets, of which the most useful are probably 'UTC+N' and 'UTC-N'. 
N is a number of hours offset from UTC (GMT), which can be fractional.

Be aware that the UTC offset is for the selected location, not for the
user's system -- the meanings of the + and - signs might not be 
intuitive.

A special form of the \fItz\fR is the string '\fIsys\fR'. This overrides
the timezone in a selected city with the system's timezone. That is,
all times are displayed correct for the user's system, regardless of
the selected location. In some circumstances, the program will
display a warning when this option is used, as it is likely to
be inappropriate.

Note that \fIsolunar\fR does not, indeed can not, warn about an
incorrect timezone name -- the C function used to manipulate the
timezone does not report any errors.

.TP
.BI -y,--year={year}
.LP
Print a year summary of events with astronomical significance, such
as equinoxes, and festival days derived from a lunar calendar, such
as Easter.

This option can optionally be used with a timezone, city, latitude,
and longitude, in any combination.
The effects are subtle and, if neither is specified, the location
is London, with the system timezone.

The location and timezone affect the display of events that have
notional exact times, rather than just days, like the solstices. 
The latitude, however specified, affects the ordering of the solstices
-- the winter solstice is in June in the southern hemisphere. 
There is no general agreement about whether the term "vernal"
(spring) equinox should be used in the southern hemisphere, where
it usually occurs in autumn. \fISolunar\fR assumes the vernal equinox is
in March, whatever the location.

\fISolunar\fR attempts to work out the start and end of daylight
savings time -- not from astronomical calculations (because there
aren't any) but from the system's timezone database. These calculations
are not particularly exact, and are subject to the vagaries of
politics.

.SH "RC FILES"

\fIsolunar\fR reads the configuration files \fI/etc/solunar.rc\fR and
\fI$HOME/.solunar.rc\fR. Any of the long-form command line options
can be specified, in the form \fIoption=value\fR. The command-line
arguments override these settings. So, for example, to set the 
default city to London, add the line \fIcity=London\fR to the RC file.

.SH "NOTES"

The calculations are all based
on published algorithms that are in the public domain, and I have checked
them against reliable data sources so far as possible. There are
potential sources of error that the program can't control, and some
issues of interpretation.

The most troublesome potential source of error is the system's timezone
database. By default, results are worked out in UTC and then converted to
the local time of the specified city. This relies on the system's own
time and date being correct, and having a proper understanding of daylight
savings changes. In general, these issues seems to be handled reasonably well
in modern Linux distributions, but there's not much \fIsolunar\fR can
do if the platform data is incorrect.

Issues of interpretation include uncertainty about exactly
what position of the sun in the sky constitutes sunset and
sunrise (and similar
considerations for the moon.)
The sun is not a uniform disc, so there has to be a convention for the
angle of zenith that we take as sunset. Most publications that give sunset
times seem to take the Zenith angle as 90 degrees and 50 minutes, so
\fIsolunar\fR does the same. However, the \fI--full\fR switch
will display sunset according to other popular zeniths.
In particular, civil twilight usually has 
a zenith 6 degrees below conventional
sunset, and denotes the time during which outdoor activities are reasonably
practicable. Nautical and astronomical twilight have zeniths 12 and 18 degrees
below conventional sunset respectively. In practice, many 
parts of the world will experience
no astronomical sunset for at least part of the year. Some, of course,
experience no sunset at all for part of the year.

Although there will always be at most one sunset on a given day, and
one sunrise, there can be zero, one, or two moonrises and sets. So to
capture all these events we have to consider the position of the moon
at a series of time intervals, and then determine the horizon-crossing
points, interpolating if necessary (at least, I have not been able to
find a better way to do this). This means that there is even more scope
for disagreement in lunar event times than solar events. Published
sources seem to vary by +/- ten minutes or so.

.SH "LIMITATIONS"

Events like equinoxes are displayed to the nearest minute but, in fact,
it's hard to get an accuracy of better than 30 minutes or so. These are
annual events, after all. The specific time is displayed as a matter
of completeness but, in fact, few people are interested in the 
exact time of an equinox, or even understand why it has one.

Although \fIsolunar\fR accepts a date as input, many of the calculations
are at a specific time. For the sake of consistency, that time is
always taken to be midday on the specified date. The exact time has
a very small effect on results like the moon phase.

.SH "AUTHOR"

\fIsolunar\fR is maintained by Kevin Boone. For more information see
https://github.com/kevinboone/solunar2

.\" end of file
